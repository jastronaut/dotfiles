#
# ncmpcpp config by jastronaut
#

# directories
ncmpcpp_directory = "~/.ncmpcpp"
lyrics_directory = "~/music/lyrics"
mpd_music_dir = "~/music"
mpd_crossfade_time = 5

# visualizer
visualizer_fifo_path = "/tmp/mpd.fifo"
visualizer_output_name = "my_fifo"
visualizer_sync_interval = "25"
visualizer_in_stereo = "yes"
visualizer_type = "wave" (spectrum/wave)
visualizer_look="♥♥"
#visualizer_look="▋▋"
visualizer_color = "red yellow green cyan magenta"

# delays
playlist_disable_highlight_delay = 3
message_delay_time = 3

# song format
##
## %l - length
## %f - filename
## %D - directory
## %a - artist
## %A - album artist
## %t - title
## %b - album
## %y - date
## %n - track number (01/12 -> 01)
## %N - full track info (01/12 -> 01/12)
## %g - genre
## %c - composer
## %p - performer
## %d - disc
## %C - comment
## %P - priority
## $R - begin right alignment
##
## you can also put them in { } and then it will be displayed
## only if all requested values are available and/or define alternate
## value with { }|{ } eg. {%a - %t}|{%f}
##
## Note: If you want to set limit on maximal length of a tag, just
## put the appropriate number between % and character that defines
## tag type, e.g. to make album take max. 20 terminal cells, use '%20b'.
##
## Note: Format that is similar to "%a - %t" (i.e. without any additional
## braces) is equal to "{%a - %t}", so if one of the tags is missing,
## you'll get nothing.
##
## text can also have different color than the main window has,
## eg. if you want length to be green, write "$3%l$9".
##
## Available values:
##
## - 0 - default window color (discards all other colors)
## - 1 - black
## - 2 - red
## - 3 - green
## - 4 - yellow
## - 5 - blue
## - 6 - magenta
## - 7 - cyan
## - 8 - white
## - 9 - end of current color
##
## Note: colors can be nested.
##
#
autocenter_mode = "no"
song_columns_list_format = "$L(9)[white]{l} (20)[red]{a}  (30)[green]{b}$R(20)[cyan]{t}"
song_status_format = " $2%a $4>$3> $8%t $4>$3> $5%b "
song_list_format = " $0$5$5%l$0$5 $8|$7 $7%a$7 $8|$7 $6%t$8 $R $8%b$8"
#
##
## Note: Below variables are for alternative version of user's interface.
## Their syntax supports all tags and colors listed above plus some extra
## markers used for text attributes. They are followed by character '$'.
## After that you can put:
##
## - b - bold text
## - u - underline text
## - r - reverse colors
## - a - use alternative character set
##
## If you don't want to use an attribute anymore, just put it again, but
## this time insert character '/' between '$' and attribute character,
## e.g. {$b%t$/b}|{$r%f$/r} will display bolded title tag or filename
## with reversed colors.
##
#
#
#now_playing_prefix = "{$b $2♥$/b}"
#now_playing_suffix = "{$b $2♥$/b}"
now_playing_prefix = "{$b}"
now_playing_suffix = "{$/b}"
#
#browser_playlist_prefix = "$2playlist$9 "
#
#selected_item_prefix = $6
#
#selected_item_suffix = $9
#
#modified_item_prefix = $3> $9
#
## Note: colors are not supported for below variable.
##
#song_window_title_format = {%a - }{%t}|{%f}
#
##### columns settings #####
##
## syntax of song columns list format is "column column etc."
##
## - syntax for each column is:
##
## (width of column)[column's color]{displayed tag}
##
## Note: Width is by default in %, if you want a column to
## have fixed size, add 'f' after the value, e.g. (10)[white]{a}
## will be the column that take 10% of screen (so the real column's
## width will depend on actual screen size), whereas (10f)[white]{a}
## will take 10 terminal cells, no matter how wide the screen is.
##
## - color is optional (if you want the default one, type [])
##
## Note: You can give a column additional attributes by putting appropriate
## character after displayed tag character. Available attributes are:
##
## - r - column will be right aligned
## - E - if tag is empty, empty tag marker won't be displayed
##
## You can also:
##
## - give a column custom name by putting it after attributes,
##   separated with character ':', e.g. {lr:Length} gives you
##   right aligned column of lengths named "Length".
##
## - define sequence of tags, that have to be displayed in case
##   predecessor is empty in a way similar to the one in classic
##   song format, i.e. using '|' character, e.g. {a|c|p:Owner}
##   creates column named "Owner" that tries to display artist
##   tag and then composer and performer if previous ones are
##   not available.
##
#
#song_columns_list_format = (20)[]{a} (6f)[green]{NE}
(50)[white]{t|f:Title} (20)[cyan]{b} (7f)[magenta]{l}
#
##### various settings #####
execute_on_song_change = "notify-send -t 5 -u normal "$(mpc current -f %title%)" "$(mpc current -f '%artist% ~ %album% \[%date%\]')""

playlist_display_mode = columns

browser_display_mode = columns

#search_engine_display_mode = columns
#
#playlist_editor_display_mode = columns
#
discard_colors_if_item_is_selected = yes
#
#incremental_seeking = yes
#
seek_time = 4
#
volume_change_step = 5
#
#
#centered_cursor = no
#progressbar_look = "─╼ "
#progressbar_look = "── "
progressbar_look = "▀▀ "
progressbar_color = "black"
progressbar_elapsed_color = "green"

progressbar_boldness = no

#default_place_to_search_in = database

user_interface = alternative
alternative_header_first_line_format  = "{$2%a$9} {$5%t$9} (°◡°♡).:｡ "
alternative_header_second_line_format = "ʕ•͡-•ʔ  {$3%b$9} {$4(%y)$9}"
alternative_ui_separator_color        = "black"
#media_library_primary_tag = artist
#
## Available values: wrapped, normal.
##
#default_find_mode = wrapped
#
## Available values: add, select.
##
#default_space_mode = add
#
#default_tag_editor_pattern = %n - %t
#
header_visibility = no
#
statusbar_visibility = no
#
#titles_visibility = yes
#
#header_text_scrolling = yes
#
#cyclic_scrolling = no
#
#lines_scrolled = 2#
#
#follow_now_playing_lyrics = no
#
fetch_lyrics_for_current_song_in_background = yes
#
store_lyrics_in_song_dir = yes
#
#generate_win32_compatible_filenames = yes
#
allow_for_physical_item_deletion = no
#
3
## Available values: add_remove, always_add.
##
#space_add_mode = always_add
#
#show_hidden_files_in_local_browser = no
#
##
## How shall screen switcher work?
##
## - "previous" - switch between the current and previous screen.
## - "screen1,...,screenN" - switch between given sequence of screens.
##
## Screens available for use: help, playlist, browser, search_engine,
## media_library, playlist_editor, tag_editor, outputs, visualizer, clock.
##
#screen_switcher_mode = playlist, browser
#

startup_screen = "browser"
#
jump_to_now_playing_song_at_start = yes
#
#ask_before_clearing_playlists = yes
#
clock_display_seconds = no
#
display_volume_level = yes
#
#display_bitrate = no
#
display_remaining_time = yes
playlist_show_remaining_time = no
#
## Available values: none, basic, extended.
##
#regular_expressions = none

ignore_leading_the = yes
#
#block_search_constraints_change_if_items_found = yes
#
mouse_support = yes
#
#mouse_list_scroll_whole_page = yes
#
empty_tag_marker = -----
#
#tags_separator = " | "
#
#tag_editor_extended_numeration = no
#
#media_library_sort_by_mtime = no
#
#enable_window_title = yes

search_engine_default_search_mode = 2

external_editor = "/usr/bin/vim"

use_console_editor = yes
#
##### colors definitions #####
#
colors_enabled = yes
empty_tag_color = "white"
header_window_color = "white"
volume_color = "white"
state_line_color = "yellow"
state_flags_color = "white"
main_window_color = "white"
color1 = "white"
color2 = "green"
main_window_highlight_color = "red"

statusbar_color = "white"
active_column_color = "yellow"

#window_border_color = "black"
#active_window_border = "black"
